async function signInWithGoogleAsync() {
    const user = {
      password,
      name,
      photoUrl,
      email

    };
    try {
      const result = await Google.logInAsync({
        androidClientId: '388214865982-upem3ea3ep023be70cds8a3de313kam9.apps.googleusercontent.com',
        
        scopes: ['profile', 'email'],
      });
  
      if (result.type === 'success') {
        
        setPassword(result.user.id)
        setName(result.user.name)
        setphotoUrl(result.user.photoUrl)
        setEmail(result.user.email)
        
        console.log(user);
        loginUser(user, context.dispatch)

      } else {
        console.log("cancelled");
      }
      
    } catch (e) {
      console.log("error",e);
    }

    
  }




















  import axios from "axios"
import baseURL from "../../assets/common/baseUrl";

//expo

import * as Google from 'expo-google-app-auth'




//android id:388214865982-upem3ea3ep023be70cds8a3de313kam9.apps.googleusercontent.com









backend



 let user = new User({
        name: req.body.name,
        email: req.body.email,
        passwordHash: bcrypt.hashSync(req.body.password, 10),
        phone: req.body.phone,
        isAdmin: req.body.isAdmin,
        street: req.body.street,
        apartment: req.body.apartment,
        zip: req.body.zip,
        city: req.body.city,
        country: req.body.country,
    })
    user = await user.save();

    if(!user)
    return res.status(400).send('the user cannot be created!')

    

